{"version":3,"sources":["components/Expedition.tsx","components/Player.tsx","components/LostCities.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ExpeditionComponent","props","expedition","useState","wagers","setWagers","cards","setCards","points","setPoints","useEffect","newExpedition","isEqual","onChange","buttons","card","type","has","push","key","color","onClick","newCards","Set","delete","add","expeditionCalculator","Group","value","buttonStyle","newWagers","parseInt","target","Button","finalPoints","size","sum","expeditionCost","subtotal","wager","total","eightCardBonus","wagerMultiplier","Array","from","reduce","previous","current","Players","PlayerComponent","player","name","setName","yellow","setYellow","blue","setBlue","white","setWhite","green","setGreen","red","setRed","style","marginBottom","defaultValue","placeholder","event","newYellow","newBlue","newWhite","newGreen","newRed","PlayerExpeditionPointsComponent","dataSource","columns","title","dataIndex","render","pagination","newPlayer","statisticStyle","actual","TIE","LostCities","player1","setPlayer1","player2","setPlayer2","score","p1name","p2name","winner","P1","P2","gutter","span","valueStyle","p1","p2","App","margin","href","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6fe92da5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Expedition, ExpeditionPoints } from './types';\nimport { Radio, Button } from 'antd';\nimport isEqual from 'lodash.isequal';\n\ninterface ExpedetionComponentProps {\n  color: string,\n  expedition: Expedition,\n  onChange: (expedition: Expedition) => void,\n}\n\nexport const ExpeditionComponent: React.FC<ExpedetionComponentProps> = (props) => {\n  const expedition = props.expedition;\n  const [wagers, setWagers] = useState(expedition.wagers);\n  const [cards, setCards] = useState(expedition.cards);\n  const [points, setPoints] = useState(expedition.points);\n\n  useEffect(() => {\n    const newExpedition = {\n      wagers,\n      cards,\n      points,\n    };\n\n    if (isEqual(newExpedition, props.expedition)) {\n      return;\n    }\n\n    props.onChange(newExpedition);\n  }, [wagers, cards, points]);  // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const expedition = props.expedition;\n    setWagers(expedition.wagers);\n    setCards(expedition.cards);\n    setPoints(expedition.points);\n  }, [props, setWagers, setCards, setPoints]);\n\n  const buttons = [];\n  for (let card = 2; card <= 10; card++) {\n    let type = cards.has(card) ? 'primary' : 'dashed'\n    buttons.push(\n      <Button\n        // @ts-ignore\n        type={type}\n        key={`${props.color}:${card}`}\n        onClick={() => {\n          const newCards = new Set(cards);\n          if (newCards.has(card)) {\n            newCards.delete(card);\n          } else {\n            newCards.add(card);\n          }\n\n          setCards(newCards);\n          setPoints(expeditionCalculator({wagers, cards: newCards}));\n        }}>\n        {card}\n      </Button>\n    )\n  }\n\n  return (\n    <div>\n      {props.color}\n      <div>\n        <Radio.Group\n          value={`${wagers}`}\n          buttonStyle=\"solid\"\n          onChange={(value) => {\n            const newWagers = parseInt(value.target.value);\n            setWagers(newWagers);\n            setPoints(expeditionCalculator({wagers: newWagers, cards}));\n          }}>\n          <Radio.Button value=\"0\">0 Wagers</Radio.Button>\n          <Radio.Button value=\"1\">1 Wager</Radio.Button>\n          <Radio.Button value=\"2\">2 Wagers</Radio.Button>\n          <Radio.Button value=\"3\">3 Wagers</Radio.Button>\n        </Radio.Group> \n        {buttons}\n        {points.finalPoints}\n      </div>\n    </div>\n  );\n}\n\nexport function expeditionCalculator(\n  expedition: {wagers: number, cards: Set<number>},\n): ExpeditionPoints {\n  if (expedition.wagers === 0 &&\n      expedition.cards.size === 0) {\n    return {\n      sum: 0,\n      expeditionCost: 0,\n      subtotal: 0,\n      wager: 0,\n      total: 0,\n      eightCardBonus: 0,\n      finalPoints: 0,\n    };\n  }\n\n  const expeditionCost = -20;\n  const wager = expedition.wagers;\n  let wagerMultiplier = 1;\n  switch (expedition.wagers) {\n    case 1:\n      wagerMultiplier = 2;\n      break;\n\n    case 2:\n      wagerMultiplier = 3;\n      break;\n\n    case 3:\n      wagerMultiplier = 4;\n      break;\n  }\n\n  let sum = Array.from(expedition.cards)\n    .reduce((previous, current) => previous + current, 0);\n\n  let subtotal = sum + expeditionCost;\n  let total = subtotal * wagerMultiplier;\n  let eightCardBonus = expedition.cards.size + wagerMultiplier >= 8 ? 20 : 0;\n\n  return {\n    sum,\n    expeditionCost,\n    subtotal,\n    wager,\n    total,\n    eightCardBonus,\n    finalPoints: total + eightCardBonus,\n  }\n}\n\n// export const ExpeditionPointsComponent: React.FC<{expedition: Expedition}> = (props) => {\n//   const expedition = props.expedition;\n//   const points = expedition.points;\n\n//   return (\n//     <></>\n//   );\n// }","import React, { useState, useEffect } from 'react';\nimport { Input, Table } from 'antd';\nimport { Player } from './types';\nimport { ExpeditionComponent, expeditionCalculator } from \"./Expedition\";\n\ninterface PlayerComponentProps {\n  placeholder: string,\n  player: Player,\n  onChange: (player: Player) => void,\n}\n\nexport const PlayerComponent: React.FC<PlayerComponentProps> = (props) => {\n  const [name, setName] = useState(props.player.name);\n  const [yellow, setYellow] = useState(props.player.yellow);\n  const [blue, setBlue] = useState(props.player.blue);\n  const [white, setWhite] = useState(props.player.white);\n  const [green, setGreen] = useState(props.player.green);\n  const [red, setRed] = useState(props.player.red);\n\n  const total = expeditionCalculator(yellow).finalPoints +\n    expeditionCalculator(blue).finalPoints +\n    expeditionCalculator(white).finalPoints +\n    expeditionCalculator(green).finalPoints +\n    expeditionCalculator(red).finalPoints;\n\n  useEffect(() => {\n    props.onChange({name, points: total, yellow, blue, white, green, red});\n  }, [name, yellow, blue, white, green, red]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setYellow(props.player.yellow);\n    setBlue(props.player.blue);\n    setWhite(props.player.white);\n    setGreen(props.player.green);\n    setRed(props.player.red);\n  }, [props, setYellow, setBlue, setWhite, setGreen, setRed]);\n\n  return (\n    <div style={{marginBottom: '2rem'}}>\n      <Input\n        size=\"large\"\n        defaultValue={name}\n        placeholder={props.placeholder}\n        onChange={(event) => setName(event.target.value)} />\n      <ExpeditionComponent\n        color=\"yellow\"\n        expedition={yellow}\n        onChange={(newYellow) => {\n          setYellow(newYellow);\n        }}\n      />\n      <ExpeditionComponent\n        color=\"blue\"\n        expedition={blue}\n        onChange={(newBlue) => {\n          setBlue(newBlue)\n        }}\n      />\n      <ExpeditionComponent\n        color=\"white\"\n        expedition={white}\n        onChange={(newWhite) => {\n          setWhite(newWhite)\n        }}\n      />\n      <ExpeditionComponent\n        color=\"green\"\n        expedition={green}\n        onChange={(newGreen) => {\n          setGreen(newGreen)\n        }}\n      />\n      <ExpeditionComponent\n        color=\"red\"\n        expedition={red}\n        onChange={(newRed) => {\n          setRed(newRed)\n        }}\n      />\n      <div>\n        Total: {total}\n      </div>\n    </div>\n  )\n}\n\nexport const PlayerExpeditionPointsComponent: React.FC<{player: Player, name: string }> = (props) => {\n  const player = props.player;\n\n  const dataSource = [\n    {\n      key: 'yellow',\n      ...player.yellow.points,\n    },\n    {\n      key: 'blue',\n      ...player.blue.points,\n    },\n    {\n      key: 'white',\n      ...player.white.points,\n    },\n    {\n      key: 'green',\n      ...player.green.points,\n    },\n    {\n      key: 'red',\n      ...player.red.points,\n    },\n    {\n      key: 'Final Points',\n      finalPoints: player.points,\n    },\n  ];\n\n  const columns = [\n    {\n      title: 'Color',\n      dataIndex: 'key',\n    },\n    {\n      title: 'Sum',\n      dataIndex: 'sum',\n    },\n    {\n      title: 'Expedition Cost',\n      dataIndex: 'expeditionCost',\n    },\n    {\n      title: 'Subtotal',\n      dataIndex: 'subtotal',\n    },\n    {\n      title: 'Wager',\n      dataIndex: 'wager',\n      render: (wager: number)  => {\n        switch (wager) {\n          case 0:\n            return 'None';\n\n          case 1:\n            return 'x 2'\n\n          case 2:\n            return 'x 3'\n\n          case 3:\n            return 'x 4'\n        }\n      }\n    },\n    {\n      title: 'Total',\n      dataIndex: 'total',\n    },\n    {\n      title: '>= 8 Card Bonus',\n      dataIndex: 'eightCardBonus',\n    },\n    {\n      title: 'Final Points',\n      dataIndex: 'finalPoints',\n    },\n  ]\n\n  return (\n    <div style={{marginBottom: '2rem'}}>\n      <h2>{props.name}</h2>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={false}\n      />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { PlayerComponent, PlayerExpeditionPointsComponent } from './Player';\nimport { Button, Row, Col, Statistic } from 'antd';\nimport { Player, Expedition } from './types';\n\nfunction newExpedition(): Expedition {\n  return {\n    wagers: 0,\n    cards: new Set(),\n    points: {\n      sum: 0,\n      expeditionCost: 0,\n      subtotal: 0,\n      wager: 0,\n      total: 0,\n      eightCardBonus: 0,\n      finalPoints: 0,\n    }\n  }\n}\n\nfunction newPlayer(): Player {\n  return {\n    name: '',\n    points: 0,\n    yellow: newExpedition(),\n    blue: newExpedition(),\n    white: newExpedition(),\n    green: newExpedition(),\n    red: newExpedition(),\n  }\n}\n\nenum Players {\n  TIE,\n  P1,\n  P2,\n}\n\nfunction statisticStyle(current: Players, actual: Players) {\n  if (actual === Players.TIE) {\n    return ''\n  }\n\n  return current === actual ? '#3f8600': '#cf1322';\n}\n\nexport const LostCities: React.FC = () => {\n  const [player1, setPlayer1] = useState(newPlayer());\n  const [player2, setPlayer2] = useState(newPlayer());\n\n  let value = '';\n  let score = `${player1.points} vs ${player2.points}`\n\n  const p1name = player1.name ? player1.name : 'Player 1';\n  const p2name = player2.name ? player2.name : 'Player 2';\n\n  let winner = Players.TIE;\n\n  if (player1.points > player2.points) {\n    value = `${p1name} Wins`;\n    winner = Players.P1;\n  } else if (player1.points < player2.points) {\n    value = `${p2name} Wins`;\n    winner = Players.P2;\n  } else {\n    value = `Tie`;\n  }\n\n  return (\n    <>\n      <h1>Lost Cities</h1>\n      <PlayerComponent\n        placeholder=\"Player 1\"\n        player={player1}\n        onChange={(player) => setPlayer1(player)}\n      />\n      <PlayerComponent\n        placeholder=\"Player 2\"\n        player={player2}\n        onChange={(player) => setPlayer2(player)}\n      />\n\n      <Row gutter={16}>\n        <Col span={4}>\n          <Statistic\n            title={p1name}\n            value={player1.points}\n            valueStyle={{ color: statisticStyle(Players.P1, winner)}}\n          />\n        </Col>\n        <Col span={4}>\n          <Statistic\n            title={p2name}\n            value={player2.points}\n            valueStyle={{ color: statisticStyle(Players.P2, winner)}}\n          />\n        </Col>\n      </Row>\n      {value}\n      {': '}\n      {score}\n      <div style={{marginBottom: '2rem'}}>\n        <Button onClick={() => {\n          const p1 = newPlayer();\n          p1.name = player1.name;\n          setPlayer1(p1);\n\n          const p2 = newPlayer();\n          p2.name = player2.name;\n          setPlayer2(p2);\n        }}>\n          New Game\n        </Button>\n      </div>\n      <h1>Points Breakdown</h1>\n      <PlayerExpeditionPointsComponent player={player1} name={p1name} />\n      <PlayerExpeditionPointsComponent player={player2} name={p2name} />\n    </>\n  );\n}","import React from 'react';\nimport { LostCities } from './components/LostCities';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div style={{margin: '1rem'}}>\n      <div style={{marginBottom: '3rem' }}>\n        <LostCities />\n      </div>\n      <h1>Resources</h1>\n      <ul>\n        <li><a href=\"https://www.github.com/aizatto/lost-cities/\">GitHub Source Code</a></li>\n        <li>\n          <a href=\"https://www.thamesandkosmos.com/index.php/product/category/games/lost-cities-card-game\">Official Site</a>\n          <ul>\n            <li><a href=\"https://www.thamesandkosmos.com/manuals/full/691821_LC_Card_Game.pdf\">Rule Book</a></li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"https://boardgamegeek.com/boardgame/50/lost-cities\">\n            Board Game Geek\n          </a>\n        </li>\n      </ul>\n      <h1>Alternatives</h1>\n      <ul>\n        <li>\n          <a href=\"https://mattbru.me/tools/lost-cities-score-calculator/\">\n            Matt Brubaker: Lost Cities Score Calculator\n          </a>\n        </li>\n        <li>\n          <a href=\"https://phone-cities.netlify.app/\">\n            https://phone-cities.netlify.app/\n          </a>\n        </li>\n        <li>\n          <a href=\"http://thegamercouple.com/tools/lost-cities-calculator/\">\n            the gamer couple: Lost Cities Calculator\n          </a>\n        </li>\n        <li>\n          <a href=\"http://plingri.net/lc.html\">\n            http://plingri.net/lc.html\n          </a>\n          <ul>\n            <li>\n              <a href=\"https://boardgamegeek.com/thread/461636/lost-cities-online-score-calculator\">\n                Announcement\n              </a>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"https://mtszkw.github.io/lost-cities/\">\n            Mateusz Kwaśniak: Lost Cities Score Calculator\n          </a>\n          <ul>\n            <li>\n              <a href=\"https://github.com/mtszkw/lost-cities\">\n                GitHub Source Code\n              </a>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <a href=\"https://davidmcneil.github.io/lost-cities/\">\n            David McNeil: Lost Cities Score Calculator\n          </a>\n          <ul>\n            <li>\n              <a href=\"https://github.com/davidMcneil/lost-cities\">\n                GitHub Source Code\n              </a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}